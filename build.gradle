plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.10'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.tenco'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Lombok 추가
	// Lombok 라이브러리를 컴파일 시점에만 사용하도록 설정합니다.
	// Lombok은 getter, setter, toString 등의 메서드를 자동 생성해주는 라이브러리입니다.
	// 'compileOnly'로 설정하면 컴파일 시 Lombok을 사용하지만, 런타임 시에는 Lombok 관련 클래스가 포함되지 않습니다.
	compileOnly 'org.projectlombok:lombok'

	// 컴파일 시 Lombok이 어노테이션을 처리하도록 설정합니다.
	// Lombok의 어노테이션(@Getter, @Setter 등)이 컴파일 시 자동으로 코드에 반영되도록 합니다.
	annotationProcessor 'org.projectlombok:lombok'

	// 테스트 코드에서도 Lombok을 컴파일 시점에만 사용하도록 설정합니다.
	// Lombok을 사용해 테스트 코드에서 getter, setter 등을 자동 생성하여 테스트를 간소화할 수 있습니다.
	testCompileOnly 'org.projectlombok:lombok'

	// 테스트 코드에서도 Lombok의 어노테이션을 처리하도록 설정합니다.
	// Lombok의 어노테이션이 테스트 코드에서도 동작할 수 있도록 지원합니다.
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}
